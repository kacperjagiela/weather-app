{"version":3,"sources":["Components/Internationalization/i18n.js","Components/Style.js","Components/Routes/LandingPage.js","functions/checkModulo.js","Components/Reusable/Back.js","Components/Reusable/Temperature.js","Components/Reusable/WeatherCard.js","Components/Routes/Forecast.js","Components/Routes/CurrentLocationForecast.js","Components/Routes/Error.js","Components/Internationalization/LanguageSelect.js","Components/App.js","index.js"],"names":["i18n","use","LanguageDetector","initReactI18next","init","resources","translations","Inputcity","button","current","back","Pressure","Clouds","Wind","Humidity","tip","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","tooltip","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","fadeIn","keyframes","Arrow","styled","Icon","Title","h1","Landing","div","LandingPageInputs","ResponsiveButton","Button","WeatherDay","Card","WeatherIcon","img","Typography","Search","Input","LandingPage","history","React","loadingSearch","setLoadingSearch","loadingButton","setLoadingButton","t","useTranslation","level","placeholder","enterButton","type","loading","size","onSearch","value","val","push","style","marginRight","icon","onClick","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","err","message","warning","checkModulo","number","modulo","num","Back","top","left","width","Temperature","temperature","temp","setTemp","unit","setUnit","changeUnit","temper","toFixed","title","onKeyPress","cursor","marginTop","marginBottom","weekDay","WeatherCard","date","humidity","tempMax","tempMin","wind","clouds","pressure","bodyStyle","padding","cover","src","alt","textAlign","fontWeight","Date","getDay","float","Forecast","match","setLoading","data","setData","listDays","setListDays","error","setError","ready","setReady","carousel","fetch","params","city","then","res","a","json","response","cod","hours","getHours","list","filter","i","dt_txt","includes","catch","fontSize","name","country","alignItems","prev","ref","node","autoplaySpeed","infinite","arrows","autoplay","paddingBottom","paddingTop","map","day","key","dt","slice","indexOf","main","temp_min","temp_max","speed","all","weather","replace","next","CurrentLocationForecast","Error","Text","Option","Select","LanguageSelect","changeLanguage","defaultLanguage","defaultValue","onChange","right","App","basename","lang","path","exact","component","withRouter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c819d14a.chunk.js","sourcesContent":["/* eslint-disable */\nimport i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\n\ni18n\n\t.use(LanguageDetector)\n\t.use(initReactI18next)\n\t.init({\n\t\t// we init with resources\n\t\tresources: {\n\t\t\t'en-US': {\n\t\t\t\ttranslations: {\n\t\t\t\t\t'Get your forecast!': 'Get your weather forecast!',\n\t\t\t\t\tInputcity: 'Input city name...',\n\t\t\t\t\t'Your location': 'Your location:',\n\t\t\t\t\t'Today will be': 'Today will be:',\n\t\t\t\t\t'Temperature for your location': 'Temperature for your location:',\n\t\t\t\t\tbutton: 'Check!',\n\t\t\t\t\tcurrent: 'Current location',\n\t\t\t\t\t'Oops.. could not find this city.': 'Oops.. could not find this city.',\n\t\t\t\t\t'Try again.': 'Try again.',\n\t\t\t\t\tback: 'Back',\n\t\t\t\t\tPressure: 'Pressure:',\n\t\t\t\t\tClouds: 'Clouds:',\n\t\t\t\t\tWind: 'Wind:',\n\t\t\t\t\tHumidity: 'Humidity:',\n\t\t\t\t\ttip: '(Try using english city names)',\n\t\t\t\t\tSunday: 'Sunday',\n\t\t\t\t\tMonday: 'Monday',\n\t\t\t\t\tTuesday: 'Tuesday',\n\t\t\t\t\tWednesday: 'Wednesday',\n\t\t\t\t\tThursday: 'Thursday',\n\t\t\t\t\tFriday: 'Friday',\n\t\t\t\t\tSaturday: 'Saturday',\n\t\t\t\t\ttooltip: 'Change the temperature scale',\n\t\t\t\t},\n\t\t\t},\n\t\t\t'pl-PL': {\n\t\t\t\ttranslations: {\n\t\t\t\t\t'Get your forecast!': 'Sprawdź prognozę pogody!',\n\t\t\t\t\tInputcity: 'Wprowadź nazwę miasta...',\n\t\t\t\t\t'Your location': 'Twoja lokalizacja:',\n\t\t\t\t\t'Today will be': 'Dzisiaj będzie:',\n\t\t\t\t\t'Temperature for your location': 'Temperatura dla twojej lokalizacja to:',\n\t\t\t\t\tbutton: 'Sprawdź!',\n\t\t\t\t\tcurrent: 'Bieżąca lokalizacja',\n\t\t\t\t\t'Oops.. could not find this city.': 'Ups... nie udało się znaleźć takiego miasta.',\n\t\t\t\t\t'Try again.': 'Spróbuj ponownie.',\n\t\t\t\t\tback: 'Cofnij',\n\t\t\t\t\tPressure: 'Ciśnienie:',\n\t\t\t\t\tClouds: 'Zachmurzenie:',\n\t\t\t\t\tWind: 'Wiatr:',\n\t\t\t\t\tHumidity: 'Wilgotność:',\n\t\t\t\t\ttip: '(Spróbuj wpisac miasto używając angielskiej nazwy)',\n\t\t\t\t\tSunday: 'Niedziela',\n\t\t\t\t\tMonday: 'Poniedziałek',\n\t\t\t\t\tTuesday: 'Wtorek',\n\t\t\t\t\tWednesday: 'Środa',\n\t\t\t\t\tThursday: 'Czwartek',\n\t\t\t\t\tFriday: 'Piątek',\n\t\t\t\t\tSaturday: 'Sobota',\n\t\t\t\t\ttooltip: 'Zmień skalę pomiaru temperatury',\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tfallbackLng: 'en',\n\t\tdebug: true,\n\n\t\t// have a common namespace used around the full app\n\t\tns: ['translations'],\n\t\tdefaultNS: 'translations',\n\n\t\tkeySeparator: false, // we use content as keys\n\n\t\tinterpolation: {\n\t\t\tescapeValue: false,\n\t\t},\n\t});\n\nexport default i18n;\n","import styled, { keyframes } from 'styled-components';\nimport { Card, Icon, Button } from 'antd';\n\nconst fadeIn = keyframes`\n\tfrom {\n\t\topacity: 0;\n\t}\n\n\tto {\n\t\topacity: 1;\n\t}\n`;\n\nexport const Arrow = styled(Icon)`\n\tfont-size: 3vw;\n\n\t@media screen and (max-width: 768px) {\n\t\tfont-size: 5vw;\n\t}\n`;\n\nexport const Title = styled.h1`\n\tfont-size:3vw;\n\n\t@media screen and (max-width: 768px){\n\t\tfont-size:5vw;\n\t}\n`;\n\nexport const Landing = styled.div`\n\twidth: 100vw;\n\tmin-height: 90vh;\n\ttext-align: center;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\tanimation: ${fadeIn} 0.9s ease-in-out;\n\t\n\t@media screen and (max-width:768px){\n\t\tpadding-top:2vh;\n\t}\n`;\n\nexport const LandingPageInputs = styled.div`\n\tmargin-top:2vh;\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content:center;\n\n\t@media screen and (max-width:768px) {\n\t\tflex-wrap:wrap;\n\t\twidth: 80%;\n\t}\n`;\n\nexport const ResponsiveButton = styled(Button)`\n\t@media screen and (max-width:768px) {\n\t\tmargin: 0 auto;\n\t\tmargin-top:30px;\n\t}\n`;\n\nexport const WeatherDay = styled(Card)`\n\twidth: 240px;\n\tmargin: 0 auto;\n\ttext-align: left;\n\tfont-size: 1.4vw;\n\n\t@media screen and (max-width: 768px) {\n\t\twidth: 180px;\n\t\tfont-size: 2vw;\n\t}\n\n\t@media screen and (max-width: 600px) {\n\t\twidth: 140px;\n\t\tfont-size: 2.5vw;\n\t}\n`;\n\nexport const WeatherIcon = styled.img`\n\twidth: 140px;\n\tmargin: 0 auto;\n\t\n\t@media screen and (max-width: 768px) {\n\t\twidth: 80px;\n\t}\n`;\n","import * as React from 'react';\nimport {\n\tTypography, Input, Button, message,\n} from 'antd';\nimport { Trans, useTranslation } from 'react-i18next';\nimport { Landing, LandingPageInputs, ResponsiveButton } from '../Style';\n\nconst { Title } = Typography;\nconst { Search } = Input;\n\nconst LandingPage = ({ history }) => {\n\tconst [loadingSearch, setLoadingSearch] = React.useState(false);\n\tconst [loadingButton, setLoadingButton] = React.useState(false);\n\tconst { t } = useTranslation();\n\n\tconst onSearch = (val) => {\n\t\tsetLoadingSearch(true);\n\t\thistory.push(`/forecast/${val}`);\n\t};\n\n\tconst currentLocation = () => {\n\t\tsetLoadingButton(true);\n\t\tif ('geolocation' in navigator) {\n\t\t\tnavigator.geolocation.getCurrentPosition((position) => {\n\t\t\t\thistory.push(`/forecast/${position.coords.longitude}/${position.coords.latitude}`);\n\t\t\t}, (err) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tmessage.warning('Could not get your location.');\n\t\t\t\t\tsetLoadingButton(true);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tmessage.warning('This browser does not support geolocation!');\n\t\t\tsetLoadingButton(false);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Landing>\n\t\t\t<Title level={1}>\n\t\t\t\t<Trans>\n\t\t\t\t\tGet your forecast!\n\t\t\t\t</Trans>\n\t\t\t</Title>\n\t\t\t<LandingPageInputs>\n\t\t\t\t<Search\n\t\t\t\t\tplaceholder={t('Inputcity')}\n\t\t\t\t\tenterButton={<Button type='primary' loading={loadingSearch}>{t('button')}</Button>}\n\t\t\t\t\tsize='large'\n\t\t\t\t\tonSearch={(value) => onSearch(value)}\n\t\t\t\t\tstyle={{ marginRight: '10px' }}\n\t\t\t\t/>\n\t\t\t\t<ResponsiveButton\n\t\t\t\t\ticon='compass'\n\t\t\t\t\ttype='primary'\n\t\t\t\t\tsize='large'\n\t\t\t\t\tonClick={() => currentLocation()}\n\t\t\t\t\tloading={loadingButton}\n\t\t\t\t>\n\t\t\t\t\t{t('current')}\n\t\t\t\t</ResponsiveButton>\n\t\t\t</LandingPageInputs>\n\t\t</Landing>\n\t);\n};\n\nexport default LandingPage;\n","const checkModulo = (number, modulo) => {\n\tlet num = number;\n\tif (num === 24) num = 0;\n\tif (num % modulo === 0) {\n\t\treturn num;\n\t}\n\treturn checkModulo(num + 1, modulo);\n};\n\nexport default checkModulo;\n","import * as React from 'react';\nimport { Button, Icon } from 'antd';\nimport { useTranslation } from 'react-i18next';\n\nconst Back = ({ history }) => {\n\tconst { t } = useTranslation();\n\n\tconst goBack = () => {\n\t\thistory.push('/');\n\t\treturn null;\n\t};\n\n\treturn (\n\t\t<Button\n\t\t\ttype=\"primary\"\n\t\t\tonClick={() => goBack()}\n\t\t\tstyle={{\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: '20px',\n\t\t\t\tleft: '40px',\n\t\t\t\twidth: '90px',\n\t\t\t}}\n\t\t>\n\t\t\t<Icon type=\"left\" />\n\t\t\t{t('back')}\n\t\t</Button>\n\t);\n};\n\nexport default Back;\n","import * as React from 'react';\nimport { Button, Tooltip } from 'antd';\nimport { useTranslation } from 'react-i18next';\n\nconst Temperature = ({ temperature }) => {\n\tconst [temp, setTemp] = React.useState(temperature);\n\tconst [unit, setUnit] = React.useState('celsius');\n\tconst { t } = useTranslation();\n\n\tconst changeUnit = (temper) => {\n\t\tif (unit === 'celsius') {\n\t\t\tsetTemp((temper * 1.8 + 32).toFixed(1));\n\t\t\tsetUnit('fahrenheit');\n\t\t} else {\n\t\t\tsetTemp(((temper - 32) / 1.8).toFixed(1));\n\t\t\tsetUnit('celsius');\n\t\t}\n\t};\n\n\treturn (\n\t\t<Tooltip title={t('tooltip')}>\n\t\t\t<Button\n\t\t\t\tonKeyPress={() => changeUnit(temp)}\n\t\t\t\tonClick={() => changeUnit(temp)}\n\t\t\t\tstyle={{\n\t\t\t\t\tcursor: 'pointer',\n\t\t\t\t\tmarginTop: '5px',\n\t\t\t\t\tmarginBottom: '5px',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{temp}\n\t\t\t\t{\n\t\t\t\t\tunit === 'celsius' ? <>&#8451;</>\n\t\t\t\t\t\t: <>&#8457;</>\n\t\t\t\t}\n\t\t\t</Button>\n\t\t</Tooltip>\n\t);\n};\n\nexport default Temperature;\n","/* eslint-disable */\nimport * as React from 'react';\nimport { Trans } from 'react-i18next';\nimport { Card } from 'antd';\nimport { WeatherDay, WeatherIcon } from '../Style';\nimport Temperature from './Temperature';\n\nconst weekDay = [\n\t'Sunday',\n\t'Monday',\n\t'Tuesday',\n\t'Wednesday',\n\t'Thursday',\n\t'Friday',\n\t'Saturday',\n]\n\nconst WeatherCard = ({ date, humidity, temp, tempMax, tempMin, wind, clouds, pressure, icon }) => (\n\t<WeatherDay\n\t\tbodyStyle={{ padding: '5px' }}\n\t\tcover={\n\t\t\t<WeatherIcon\n\t\t\t\tsrc={`http://openweathermap.org/img/wn/${icon}@2x.png`}\n\t\t\t\talt={icon}\n\t\t\t/>\n\t\t}\n\t>\n\t\t<p style={{ textAlign: 'center', marginBottom: '5px' }}>\n\t\t\t({date})\n\t\t</p>\n\t\t<p style={{ textAlign: 'center', marginBottom: '5px', fontWeight: 'bold' }}>\n\t\t\t<Trans>\n\t\t\t\t{weekDay[new Date(date).getDay()]}\n\t\t\t</Trans>\n\t\t</p>\n\t\t<div style={{ textAlign: 'center' }}>\n\t\t\t<Temperature temperature={temp} tempMax={tempMax} tempMin={tempMin} />\n\t\t</div>\n\t\t<p>\n\t\t\t<Trans>Pressure</Trans> <span style={{ float: 'right' }}>{pressure}</span>\n\t\t</p>\n\t\t<p>\n\t\t\t<Trans>Clouds</Trans> <span style={{ float: 'right' }}>{clouds}%</span>\n\t\t</p>\n\t\t<p>\n\t\t\t<Trans>Wind</Trans> <span style={{ float: 'right' }}>{wind} m/s</span>\n\t\t</p>\n\t\t<p>\n\t\t\t<Trans>Humidity</Trans> <span style={{ float: 'right' }}>{humidity}%</span>\n\t\t</p>\n\t</WeatherDay>\n);\n\nexport default WeatherCard;\n","/* eslint-disable react/jsx-one-expression-per-line */\nimport * as React from 'react';\nimport { Icon, Carousel } from 'antd';\nimport { Trans } from 'react-i18next';\nimport checkModulo from '../../functions/checkModulo';\nimport {\n\tLanding, Title, LandingPageInputs, Arrow,\n} from '../Style';\nimport Back from '../Reusable/Back';\nimport WeatherCard from '../Reusable/WeatherCard';\n\nconst Forecast = ({ history, match }) => {\n\tconst [loading, setLoading] = React.useState(true);\n\tconst [data, setData] = React.useState('');\n\tconst [listDays, setListDays] = React.useState([]);\n\tconst [error, setError] = React.useState(false);\n\tconst [ready, setReady] = React.useState(false);\n\tconst carousel = React.useRef(React.createRef());\n\n\tconst next = () => {\n\t\tcarousel.current.next();\n\t};\n\n\tconst prev = () => {\n\t\tcarousel.current.prev();\n\t};\n\n\tReact.useEffect(() => {\n\t\tconst fetchData = () => {\n\t\t\tfetch(`https://api.openweathermap.org/data/2.5/forecast?q=${match.params.city}&units=metric&APPID=27b52f2d96109ac0a634c200d7092254`)\n\t\t\t\t.then(async (res) => {\n\t\t\t\t\tconst response = await res.json();\n\t\t\t\t\tif (response.cod !== '404' && !ready) {\n\t\t\t\t\t\tconst hours = checkModulo(new Date().getHours(), 3);\n\t\t\t\t\t\tsetData(response);\n\t\t\t\t\t\tsetListDays(response.list.filter((i) => i.dt_txt.includes(`${hours}:00:00`)));\n\t\t\t\t\t\tsetError(false);\n\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\tsetReady(true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetError(true);\n\t\t\t\t\t\tsetLoading(true);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tsetError(true);\n\t\t\t\t});\n\t\t};\n\t\tfetchData();\n\t\t// eslint-disable-next-line\n\t}, []);\n\n\tconst Loaded = () => {\n\t\tif (error) {\n\t\t\thistory.push('/error');\n\t\t\treturn null;\n\t\t} return (\n\t\t\t<Landing>\n\t\t\t\t<Back history={history} />\n\t\t\t\t<Title>\n\t\t\t\t\t<Trans>Your location</Trans> {data.city.name} {data.city.country}\n\t\t\t\t</Title>\n\t\t\t\t<LandingPageInputs style={{ alignItems: 'center' }}>\n\t\t\t\t\t<Arrow\n\t\t\t\t\t\ttype='left-circle'\n\t\t\t\t\t\tonClick={() => prev()}\n\t\t\t\t\t/>\n\t\t\t\t\t<Carousel\n\t\t\t\t\t\t// eslint-disable-next-line no-return-assign\n\t\t\t\t\t\tref={(node) => (carousel.current = node)}\n\t\t\t\t\t\tautoplaySpeed={5000}\n\t\t\t\t\t\tinfinite\n\t\t\t\t\t\tarrows\n\t\t\t\t\t\tautoplay\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\twidth: '50vw', paddingBottom: '25px', paddingTop: '25px',\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlistDays.map((day) => (\n\t\t\t\t\t\t\t\t<WeatherCard\n\t\t\t\t\t\t\t\t\tkey={day.dt}\n\t\t\t\t\t\t\t\t\tdate={day.dt_txt.slice(0, day.dt_txt.indexOf(' '))}\n\t\t\t\t\t\t\t\t\thumidity={day.main.humidity}\n\t\t\t\t\t\t\t\t\ttemp={day.main.temp.toFixed(1)}\n\t\t\t\t\t\t\t\t\ttempMin={day.main.temp_min.toFixed(1)}\n\t\t\t\t\t\t\t\t\ttempMax={day.main.temp_max.toFixed(1)}\n\t\t\t\t\t\t\t\t\twind={day.wind.speed}\n\t\t\t\t\t\t\t\t\tclouds={day.clouds.all}\n\t\t\t\t\t\t\t\t\tpressure={day.main.pressure}\n\t\t\t\t\t\t\t\t\ticon={day.weather[0].icon.replace('n', 'd')}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t</Carousel>\n\t\t\t\t\t<Arrow\n\t\t\t\t\t\ttype='right-circle'\n\t\t\t\t\t\tonClick={() => next()}\n\t\t\t\t\t/>\n\t\t\t\t</LandingPageInputs>\n\t\t\t</Landing>\n\t\t);\n\t};\n\n\n\treturn (\n\t\t<Landing>\n\t\t\t{\n\t\t\t\t(loading && !error) ? <Icon type='loading' style={{ fontSize: '3rem' }} />\n\t\t\t\t\t: <Loaded />\n\t\t\t}\n\t\t</Landing>\n\t);\n};\n\nexport default Forecast;\n","/* eslint-disable react/jsx-one-expression-per-line */\nimport * as React from 'react';\nimport { Icon, Carousel } from 'antd';\nimport { Trans } from 'react-i18next';\nimport checkModulo from '../../functions/checkModulo';\nimport {\n\tLanding, LandingPageInputs, Title, Arrow,\n} from '../Style';\nimport Back from '../Reusable/Back';\nimport WeatherCard from '../Reusable/WeatherCard';\n\nconst CurrentLocationForecast = ({ match, history }) => {\n\tconst [loading, setLoading] = React.useState(true);\n\tconst [data, setData] = React.useState('');\n\tconst [listDays, setListDays] = React.useState([]);\n\tconst carousel = React.useRef(React.createRef());\n\n\tconst next = () => {\n\t\tcarousel.current.next();\n\t};\n\n\tconst prev = () => {\n\t\tcarousel.current.prev();\n\t};\n\n\tReact.useEffect(() => {\n\t\tconst fetchData = () => {\n\t\t\t// https for heroku\n\t\t\tfetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${match.params.latitude}&lon=${match.params.longitude}&units=metric&APPID=27b52f2d96109ac0a634c200d7092254`)\n\t\t\t\t.then(async (res) => {\n\t\t\t\t\tconst response = await res.json();\n\t\t\t\t\tconst hours = checkModulo(new Date().getHours(), 3);\n\t\t\t\t\tsetData(response);\n\t\t\t\t\tsetListDays(response.list.filter((i) => i.dt_txt.includes(`${hours}:00:00`)));\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\thistory.push('/error');\n\t\t\t\t\treturn null;\n\t\t\t\t});\n\t\t};\n\t\tfetchData();\n\t\t// eslint-disable-next-line\n\t}, []);\n\n\tconst Loaded = () => (\n\t\t<Landing>\n\t\t\t<Back history={history} />\n\t\t\t<Title>\n\t\t\t\t<Trans>Your location</Trans> {data.city.name} {data.city.country}\n\t\t\t</Title>\n\t\t\t<LandingPageInputs style={{ alignItems: 'center' }}>\n\t\t\t\t<Arrow\n\t\t\t\t\ttype='left-circle'\n\t\t\t\t\tonClick={() => prev()}\n\t\t\t\t/>\n\t\t\t\t<Carousel\n\t\t\t\t\t// eslint-disable-next-line no-return-assign\n\t\t\t\t\tref={(node) => (carousel.current = node)}\n\t\t\t\t\tautoplaySpeed={5000}\n\t\t\t\t\tinfinite\n\t\t\t\t\tarrows\n\t\t\t\t\tautoplay\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: '50vw', paddingBottom: '25px', paddingTop: '25px',\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{\n\t\t\t\t\t\tlistDays.map((day) => (\n\t\t\t\t\t\t\t<WeatherCard\n\t\t\t\t\t\t\t\tkey={day.dt}\n\t\t\t\t\t\t\t\tdate={day.dt_txt.slice(0, day.dt_txt.indexOf(' '))}\n\t\t\t\t\t\t\t\thumidity={day.main.humidity}\n\t\t\t\t\t\t\t\ttemp={day.main.temp.toFixed(1)}\n\t\t\t\t\t\t\t\ttempMin={day.main.temp_min.toFixed(1)}\n\t\t\t\t\t\t\t\ttempMax={day.main.temp_max.toFixed(1)}\n\t\t\t\t\t\t\t\twind={day.wind.speed}\n\t\t\t\t\t\t\t\tclouds={day.clouds.all}\n\t\t\t\t\t\t\t\tpressure={day.main.pressure}\n\t\t\t\t\t\t\t\ticon={day.weather[0].icon.replace('n', 'd')}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</Carousel>\n\t\t\t\t<Arrow\n\t\t\t\t\ttype='right-circle'\n\t\t\t\t\tonClick={() => next()}\n\t\t\t\t/>\n\t\t\t</LandingPageInputs>\n\t\t</Landing>\n\t);\n\n\treturn (\n\t\t<Landing>\n\t\t\t{\n\t\t\t\tloading ? <Icon type='loading' style={{ fontSize: '3rem' }} />\n\t\t\t\t\t: <Loaded />\n\t\t\t}\n\t\t</Landing>\n\t);\n};\n\nexport default CurrentLocationForecast;\n","import * as React from 'react';\nimport { Typography, Input, Button } from 'antd';\nimport { useTranslation, Trans } from 'react-i18next';\nimport { Landing, LandingPageInputs } from '../Style';\nimport Back from '../Reusable/Back';\n\nconst Error = ({ history }) => {\n\tconst [loading, setLoading] = React.useState(false);\n\tconst { t } = useTranslation();\n\n\tconst onSearch = (val) => {\n\t\tsetLoading(!loading);\n\t\thistory.push(`/forecast/${val}`);\n\t};\n\n\treturn (\n\t\t<Landing>\n\t\t\t<Back history={history} />\n\t\t\t<Typography.Title level={3}>\n\t\t\t\t<Trans>\n\t\t\t\t\tOops.. could not find this city.\n\t\t\t\t</Trans>\n\t\t\t</Typography.Title>\n\t\t\t<Typography.Title level={3}>\n\t\t\t\t<Trans>\n\t\t\t\t\tTry again.\n\t\t\t\t</Trans>\n\t\t\t</Typography.Title>\n\t\t\t<LandingPageInputs>\n\t\t\t\t<Input.Search\n\t\t\t\t\tplaceholder={t('Inputcity')}\n\t\t\t\t\tenterButton={<Button type='primary' loading={loading}>{t('button')}</Button>}\n\t\t\t\t\tsize='large'\n\t\t\t\t\tonSearch={(value) => onSearch(value)}\n\t\t\t\t\tstyle={{ marginRight: '10px' }}\n\t\t\t\t/>\n\t\t\t</LandingPageInputs>\n\t\t\t<Typography.Text style={{ marginTop: '15px' }}>\n\t\t\t\t<Trans>\n\t\t\t\t\ttip\n\t\t\t\t</Trans>\n\t\t\t</Typography.Text>\n\t\t</Landing>\n\t);\n};\n\nexport default Error;\n","import * as React from 'react';\nimport { Select } from 'antd';\n\nconst { Option } = Select;\n\nconst LanguageSelect = ({ changeLanguage, defaultLanguage }) => (\n\t<Select\n\t\tdefaultValue={defaultLanguage}\n\t\tonChange={(value) => changeLanguage(value)}\n\t\tstyle={{\n\t\t\tposition: 'absolute', top: '20px', right: '40px', width: '90px',\n\t\t}}\n\t>\n\t\t<Option value='en-US'>en-US</Option>\n\t\t<Option value='pl-PL'>pl-PL</Option>\n\t</Select>\n);\n\nexport default LanguageSelect;\n","import React from 'react';\nimport {\n\tHashRouter, Switch, Route, withRouter,\n} from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport LandingPage from './Routes/LandingPage';\nimport Forecast from './Routes/Forecast';\nimport CurrentLocationForecast from './Routes/CurrentLocationForecast';\nimport Error from './Routes/Error';\nimport LanguageSelect from './Internationalization/LanguageSelect';\n\n//  API 27b52f2d96109ac0a634c200d7092254\n\nconst App = () => {\n\tconst { i18n } = useTranslation();\n\n\tconst changeLanguage = (lang) => {\n\t\ti18n.changeLanguage(lang);\n\t};\n\n\treturn (\n\t\t<HashRouter basename='/'>\n\t\t\t<LanguageSelect changeLanguage={changeLanguage} defaultLanguage='en-US' />\n\t\t\t<Switch>\n\t\t\t\t<Route path='/forecast/:longitude/:latitude' exact component={withRouter(CurrentLocationForecast)} />\n\t\t\t\t<Route path='/forecast/:city' exact component={withRouter(Forecast)} />\n\t\t\t\t<Route path='/error' exact component={withRouter(Error)} />\n\t\t\t\t<Route path='/' component={withRouter(LandingPage)} />\n\t\t\t</Switch>\n\t\t</HashRouter>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './Styles/index.css';\nimport './Components/Internationalization/i18n';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}