{"version":3,"sources":["components/internationalization/i18n.js","components/Style.js","components/routes/LandingPage.js","components/reusable/Style.js","components/reusable/Temperature.js","components/reusable/WeatherCard.js","functions/checkModulo.js","components/reusable/Back.js","functions/changeUrl.js","components/routes/Forecast.js","components/routes/CurrentLocationForecast.js","components/routes/Error.js","components/internationalization/Style.js","components/internationalization/LanguageSelect.js","components/App.js","index.js"],"names":["i18n","use","LanguageDetector","initReactI18next","init","resources","translations","Inputcity","button","current","back","Pressure","Clouds","Wind","Humidity","tip","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","tooltip","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","fadeIn","keyframes","Arrow","styled","Icon","Landing","div","LandingPageInputs","ResponsiveButton","Button","Title","h1","WeatherCarousel","Carousel","Typography","Search","Input","LandingPage","history","React","loadingSearch","setLoadingSearch","loadingButton","setLoadingButton","t","useTranslation","level","placeholder","enterButton","type","loading","size","onSearch","value","val","push","style","marginRight","icon","onClick","navigator","geolocation","getCurrentPosition","position","coords","longitude","latitude","err","message","warning","BackButton","TemperatureButton","WeatherDay","Card","WeatherIcon","img","WeatherProperty","p","Temperature","temperature","temp","setTemp","unit","setUnit","changeUnit","temper","toFixed","title","onKeyPress","weekDay","WeatherCard","day","bodyStyle","padding","cover","src","weather","replace","alt","textAlign","marginBottom","dt_txt","slice","indexOf","fontWeight","Date","getDay","main","pressure","clouds","all","wind","speed","humidity","checkModulo","number","modulo","num","Back","changeUrl","url","Forecast","match","setLoading","data","setData","listDays","setListDays","undefined","error","setError","carousel","fetch","params","city","then","res","a","json","response","cod","hours","getHours","list","filter","i","includes","catch","fontSize","name","country","alignItems","prev","ref","node","autoplaySpeed","infinite","arrows","autoplay","width","paddingBottom","paddingTop","map","key","dt","next","CurrentLocationForecast","Error","Text","marginTop","LangSelect","Select","Option","LanguageSelect","changeLanguage","defaultLanguage","defaultValue","onChange","App","basename","lang","language","path","exact","component","withRouter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e251f786.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\n\ni18n\n\t.use(LanguageDetector)\n\t.use(initReactI18next)\n\t.init({\n\t\t// we init with resources\n\t\tresources: {\n\t\t\t'en-US': {\n\t\t\t\ttranslations: {\n\t\t\t\t\t'Get your forecast!': 'Get your weather forecast!',\n\t\t\t\t\tInputcity: 'Input city name...',\n\t\t\t\t\t'Your location': 'Your location:',\n\t\t\t\t\t'Today will be': 'Today will be:',\n\t\t\t\t\t'Temperature for your location': 'Temperature for your location:',\n\t\t\t\t\tbutton: 'Check!',\n\t\t\t\t\tcurrent: 'Current location',\n\t\t\t\t\t'Oops.. could not find this city.': 'Oops.. could not find this city.',\n\t\t\t\t\t'Try again.': 'Try again.',\n\t\t\t\t\tback: 'Back',\n\t\t\t\t\tPressure: 'Pressure:',\n\t\t\t\t\tClouds: 'Clouds:',\n\t\t\t\t\tWind: 'Wind:',\n\t\t\t\t\tHumidity: 'Humidity:',\n\t\t\t\t\ttip: '(Try using english city names)',\n\t\t\t\t\tSunday: 'Sunday',\n\t\t\t\t\tMonday: 'Monday',\n\t\t\t\t\tTuesday: 'Tuesday',\n\t\t\t\t\tWednesday: 'Wednesday',\n\t\t\t\t\tThursday: 'Thursday',\n\t\t\t\t\tFriday: 'Friday',\n\t\t\t\t\tSaturday: 'Saturday',\n\t\t\t\t\ttooltip: 'Change the temperature scale',\n\t\t\t\t},\n\t\t\t},\n\t\t\t'pl-PL': {\n\t\t\t\ttranslations: {\n\t\t\t\t\t'Get your forecast!': 'Sprawdź prognozę pogody!',\n\t\t\t\t\tInputcity: 'Wprowadź nazwę miasta...',\n\t\t\t\t\t'Your location': 'Twoja lokalizacja:',\n\t\t\t\t\t'Today will be': 'Dzisiaj będzie:',\n\t\t\t\t\t'Temperature for your location': 'Temperatura dla twojej lokalizacja to:',\n\t\t\t\t\tbutton: 'Sprawdź!',\n\t\t\t\t\tcurrent: 'Bieżąca lokalizacja',\n\t\t\t\t\t'Oops.. could not find this city.': 'Ups... nie udało się znaleźć takiego miasta.',\n\t\t\t\t\t'Try again.': 'Spróbuj ponownie.',\n\t\t\t\t\tback: 'Cofnij',\n\t\t\t\t\tPressure: 'Ciśnienie:',\n\t\t\t\t\tClouds: 'Zachmurzenie:',\n\t\t\t\t\tWind: 'Wiatr:',\n\t\t\t\t\tHumidity: 'Wilgotność:',\n\t\t\t\t\ttip: '(Spróbuj wpisac miasto używając angielskiej nazwy)',\n\t\t\t\t\tSunday: 'Niedziela',\n\t\t\t\t\tMonday: 'Poniedziałek',\n\t\t\t\t\tTuesday: 'Wtorek',\n\t\t\t\t\tWednesday: 'Środa',\n\t\t\t\t\tThursday: 'Czwartek',\n\t\t\t\t\tFriday: 'Piątek',\n\t\t\t\t\tSaturday: 'Sobota',\n\t\t\t\t\ttooltip: 'Zmień skalę pomiaru temperatury',\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tfallbackLng: 'en-US',\n\t\tdebug: true,\n\n\t\tns: ['translations'],\n\t\tdefaultNS: 'translations',\n\n\t\tkeySeparator: false,\n\n\t\tinterpolation: {\n\t\t\tescapeValue: false,\n\t\t},\n\t});\n\nexport default i18n;\n","import styled, { keyframes } from 'styled-components';\nimport {\n\tIcon, Button, Carousel,\n} from 'antd';\n\nconst fadeIn = keyframes`\n\tfrom {\n\t\topacity: 0;\n\t}\n\n\tto {\n\t\topacity: 1;\n\t}\n`;\n\nexport const Arrow = styled(Icon)`\n\tfont-size: 3vw;\n\n\t@media screen and (max-width: 768px) {\n\t\tfont-size: 5vw;\n\t}\n`;\n\nexport const Landing = styled.div`\n\twidth: 100vw;\n\tmin-height: 90vh;\n\ttext-align: center;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\tanimation: ${fadeIn} 0.9s ease-in-out;\n\t\n\t@media screen and (max-width:768px){\n\t\tpadding-top:2vh;\n\t}\n`;\n\nexport const LandingPageInputs = styled.div`\n\tmargin-top:2vh;\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content:center;\n\n\t@media screen and (max-width:768px) {\n\t\tflex-wrap:wrap;\n\t\twidth: 80%;\n\t}\n`;\n\nexport const ResponsiveButton = styled(Button)`\n\t@media screen and (max-width:768px) {\n\t\tmargin: 0 auto;\n\t\tmargin-top:30px;\n\t}\n`;\n\nexport const Title = styled.h1`\n\tfont-size:3vw;\n\n\t@media screen and (max-width: 768px){\n\t\tfont-size:5vw;\n\t}\n\t@media (min-width:1400px){\n\t\tfont-size:2vw;\n\t}\n`;\n\nexport const WeatherCarousel = styled(Carousel)`\n\twidth: 50vw;\n\tpadding-bottom: 25px;\n\tpadding-top: 25px;\n`;\n","import * as React from 'react';\nimport {\n\tTypography, Input, Button, message,\n} from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { Landing, LandingPageInputs, ResponsiveButton } from '../Style';\n\nconst { Title } = Typography;\nconst { Search } = Input;\n\nconst LandingPage = ({ history }) => {\n\tconst [loadingSearch, setLoadingSearch] = React.useState(false);\n\tconst [loadingButton, setLoadingButton] = React.useState(false);\n\tconst { t } = useTranslation();\n\n\tconst onSearch = (val) => {\n\t\tsetLoadingSearch(true);\n\t\thistory.push(`/forecast/${val}`);\n\t};\n\n\tconst currentLocation = () => {\n\t\tsetLoadingButton(true);\n\t\tif ('geolocation' in navigator) {\n\t\t\tnavigator.geolocation.getCurrentPosition((position) => {\n\t\t\t\thistory.push(`/forecast/${position.coords.longitude}/${position.coords.latitude}`);\n\t\t\t}, (err) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tmessage.warning('Could not get your location.');\n\t\t\t\t\tsetLoadingButton(true);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tmessage.warning('This browser does not support geolocation!');\n\t\t\tsetLoadingButton(false);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Landing>\n\t\t\t<Title level={1}>\n\t\t\t\t{t('Get your forecast!')}\n\t\t\t</Title>\n\t\t\t<LandingPageInputs>\n\t\t\t\t<Search\n\t\t\t\t\tplaceholder={t('Inputcity')}\n\t\t\t\t\tenterButton={<Button type='primary' loading={loadingSearch}>{t('button')}</Button>}\n\t\t\t\t\tsize='large'\n\t\t\t\t\tonSearch={(value) => onSearch(value)}\n\t\t\t\t\tstyle={{ marginRight: '10px' }}\n\t\t\t\t/>\n\t\t\t\t<ResponsiveButton\n\t\t\t\t\ticon='compass'\n\t\t\t\t\ttype='primary'\n\t\t\t\t\tsize='large'\n\t\t\t\t\tonClick={() => currentLocation()}\n\t\t\t\t\tloading={loadingButton}\n\t\t\t\t>\n\t\t\t\t\t{t('current')}\n\t\t\t\t</ResponsiveButton>\n\t\t\t</LandingPageInputs>\n\t\t</Landing>\n\t);\n};\n\nexport default LandingPage;\n","import styled from 'styled-components';\nimport { Button, Card } from 'antd';\n\nexport const BackButton = styled(Button)`\n\tposition: absolute;\n\ttop: 20px;\n\tleft: 40px;\n\twidth: 90px;\n`;\n\nexport const TemperatureButton = styled(Button)`\n\tcursor: pointer;\n\tmargin-top: 5px;\n\tmargin-bottom: 5px;\n`;\n\nexport const WeatherDay = styled(Card)`\n\twidth: 240px;\n\tmargin: 0 auto;\n\ttext-align: left;\n\tfont-size: 1.4vw;\n\n\t@media screen and (max-width: 768px) {\n\t\twidth: 180px;\n\t\tfont-size: 2vw;\n\t}\n\n\t@media (min-width:1400px){\n\t\twidth:350px;\n\t\tfont-size: 1vw;\n\t}\n\n\t@media screen and (max-width: 600px) {\n\t\twidth: 140px;\n\t\tfont-size: 2.5vw;\n\t}\n`;\n\nexport const WeatherIcon = styled.img`\n\twidth: 140px;\n\tmargin: 0 auto;\n\t\n\t@media screen and (max-width: 768px) {\n\t\twidth: 80px;\n\t}\n`;\n\nexport const WeatherProperty = styled.p`\n\tdisplay:flex;\n\tjustify-content: space-between;\n`;\n","import * as React from 'react';\nimport { Tooltip } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { TemperatureButton } from './Style';\n\nconst Temperature = ({ temperature }) => {\n\tconst [temp, setTemp] = React.useState(temperature);\n\tconst [unit, setUnit] = React.useState('celsius');\n\tconst { t } = useTranslation();\n\n\tconst changeUnit = (temper) => {\n\t\tif (unit === 'celsius') {\n\t\t\tsetTemp((temper * 1.8 + 32).toFixed(1));\n\t\t\tsetUnit('fahrenheit');\n\t\t} else {\n\t\t\tsetTemp(((temper - 32) / 1.8).toFixed(1));\n\t\t\tsetUnit('celsius');\n\t\t}\n\t};\n\n\treturn (\n\t\t<Tooltip title={t('tooltip')}>\n\t\t\t<TemperatureButton\n\t\t\t\tonKeyPress={() => changeUnit(temp)}\n\t\t\t\tonClick={() => changeUnit(temp)}\n\t\t\t>\n\t\t\t\t{temp}\n\t\t\t\t{\n\t\t\t\t\tunit === 'celsius' ? <>&#8451;</>\n\t\t\t\t\t\t: <>&#8457;</>\n\t\t\t\t}\n\t\t\t</TemperatureButton>\n\t\t</Tooltip>\n\t);\n};\n\nexport default Temperature;\n","import * as React from 'react';\nimport { Trans } from 'react-i18next';\nimport { WeatherDay, WeatherIcon, WeatherProperty } from './Style';\nimport Temperature from './Temperature';\n\nconst weekDay = [\n\t'Sunday',\n\t'Monday',\n\t'Tuesday',\n\t'Wednesday',\n\t'Thursday',\n\t'Friday',\n\t'Saturday',\n];\n\nconst WeatherCard = ({ day }) => (\n\t<WeatherDay\n\t\tbodyStyle={{ padding: '5px' }}\n\t\tcover={\n\t\t\t(\n\t\t\t\t<WeatherIcon\n\t\t\t\t\tsrc={`http://openweathermap.org/img/wn/${day.weather[0].icon.replace('n', 'd')}@2x.png`}\n\t\t\t\t\talt={day.weather[0].icon.replace('n', 'd')}\n\t\t\t\t/>\n\t\t\t)\n\t\t}\n\t>\n\t\t<p style={{ textAlign: 'center', marginBottom: '5px' }}>\n\t\t\t(\n\t\t\t{day.dt_txt.slice(0, day.dt_txt.indexOf(' '))}\n\t\t\t)\n\t\t</p>\n\t\t<p style={{ textAlign: 'center', marginBottom: '5px', fontWeight: 'bold' }}>\n\t\t\t<Trans>\n\t\t\t\t{weekDay[new Date(day.dt_txt.slice(0, day.dt_txt.indexOf(' '))).getDay()]}\n\t\t\t</Trans>\n\t\t</p>\n\t\t<div style={{ textAlign: 'center' }}>\n\t\t\t<Temperature temperature={day.main.temp.toFixed(1)} />\n\t\t</div>\n\t\t<WeatherProperty>\n\t\t\t<Trans>Pressure</Trans>\n\t\t\t{' '}\n\t\t\t<span>\n\t\t\t\t{day.main.pressure}\n\t\t\t</span>\n\t\t</WeatherProperty>\n\t\t<WeatherProperty>\n\t\t\t<Trans>Clouds</Trans>\n\t\t\t{' '}\n\t\t\t<span>\n\t\t\t\t{day.clouds.all}\n\t\t\t\t%\n\t\t\t</span>\n\t\t</WeatherProperty>\n\t\t<WeatherProperty>\n\t\t\t<Trans>Wind</Trans>\n\t\t\t{' '}\n\t\t\t<span>\n\t\t\t\t{`${day.wind.speed} m/s`}\n\t\t\t</span>\n\t\t</WeatherProperty>\n\t\t<WeatherProperty>\n\t\t\t<Trans>Humidity</Trans>\n\t\t\t{' '}\n\t\t\t<span>\n\t\t\t\t{day.main.humidity}\n\t\t\t\t%\n\t\t\t</span>\n\t\t</WeatherProperty>\n\t</WeatherDay>\n);\n\nexport default WeatherCard;\n","const checkModulo = (number, modulo) => {\n\tlet num = number;\n\tif (num === 24) num = 0;\n\tif (num % modulo === 0) {\n\t\treturn num;\n\t}\n\treturn checkModulo(num + 1, modulo);\n};\n\nexport default checkModulo;\n","import * as React from 'react';\nimport { Icon } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { BackButton } from './Style';\n\nconst Back = ({ history }) => {\n\tconst { t } = useTranslation();\n\n\tconst goBack = () => {\n\t\thistory.push('/');\n\t\treturn null;\n\t};\n\n\treturn (\n\t\t<BackButton\n\t\t\ttype=\"primary\"\n\t\t\tonClick={() => goBack()}\n\t\t>\n\t\t\t<Icon type=\"left\" />\n\t\t\t{t('back')}\n\t\t</BackButton>\n\t);\n};\n\nexport default Back;\n","const changeUrl = (history, url) => {\n\thistory.push(url);\n};\n\nexport default changeUrl;\n","import * as React from 'react';\nimport { Icon } from 'antd';\nimport { Trans } from 'react-i18next';\nimport WeatherCard from '../reusable/WeatherCard';\nimport checkModulo from '../../functions/checkModulo';\nimport {\n\tLanding, Title, LandingPageInputs, Arrow, WeatherCarousel,\n} from '../Style';\nimport Back from '../reusable/Back';\nimport changeUrl from '../../functions/changeUrl';\n\nconst Forecast = ({ history, match }) => {\n\tconst [loading, setLoading] = React.useState(true);\n\tconst [data, setData] = React.useState('');\n\tconst [listDays, setListDays] = React.useState([]);\n\tconst [error, setError] = React.useState(undefined);\n\tconst carousel = React.useRef(React.createRef());\n\n\tconst next = () => carousel.current.next();\n\n\tconst prev = () => carousel.current.prev();\n\n\tReact.useEffect(() => {\n\t\tconst fetchData = () => {\n\t\t\tfetch(`https://api.openweathermap.org/data/2.5/forecast?q=${match.params.city}&units=metric&APPID=27b52f2d96109ac0a634c200d7092254`)\n\t\t\t\t.then(async (res) => {\n\t\t\t\t\tconst response = await res.json();\n\t\t\t\t\tif (response.cod !== '404') {\n\t\t\t\t\t\tconst hours = checkModulo(new Date().getHours(), 3);\n\t\t\t\t\t\tsetData(response);\n\t\t\t\t\t\tsetListDays(response.list.filter((i) => i.dt_txt.includes(`${hours}:00:00`)));\n\t\t\t\t\t\tsetError(false);\n\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetError(true);\n\t\t\t\t\t\tsetLoading(true);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tsetError(true);\n\t\t\t\t});\n\t\t};\n\t\tfetchData();\n\t}, [history, match]);\n\n\tconst Loaded = () => {\n\t\tif (error) {\n\t\t\tchangeUrl(history, '/error');\n\t\t} else if (loading && !error) {\n\t\t\treturn (<Icon type='loading' style={{ fontSize: '3rem' }} />);\n\t\t} else if (data.cod !== '404') {\n\t\t\treturn (\n\t\t\t\t<Landing>\n\t\t\t\t\t<Back history={history} />\n\t\t\t\t\t<Title>\n\t\t\t\t\t\t<Trans>Your location</Trans>\n\t\t\t\t\t\t{` ${data.city.name} `}\n\t\t\t\t\t\t{`${data.city.country}`}\n\t\t\t\t\t</Title>\n\t\t\t\t\t<LandingPageInputs style={{ alignItems: 'center' }}>\n\t\t\t\t\t\t<Arrow\n\t\t\t\t\t\t\ttype='left-circle'\n\t\t\t\t\t\t\tonClick={() => prev()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<WeatherCarousel\n\t\t\t\t\t\t\tref={(node) => (carousel.current = node)}\n\t\t\t\t\t\t\tautoplaySpeed={5000}\n\t\t\t\t\t\t\tinfinite\n\t\t\t\t\t\t\tarrows\n\t\t\t\t\t\t\tautoplay\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\twidth: '50vw', paddingBottom: '25px', paddingTop: '25px',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlistDays.map((day) => (\n\t\t\t\t\t\t\t\t\t<WeatherCard\n\t\t\t\t\t\t\t\t\t\tkey={day.dt}\n\t\t\t\t\t\t\t\t\t\tday={day}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</WeatherCarousel>\n\t\t\t\t\t\t<Arrow\n\t\t\t\t\t\t\ttype='right-circle'\n\t\t\t\t\t\t\tonClick={() => next()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</LandingPageInputs>\n\t\t\t\t</Landing>\n\t\t\t);\n\t\t}\n\t\treturn null;\n\t};\n\n\n\treturn (\n\t\t<Landing>\n\t\t\t<Loaded />\n\t\t</Landing>\n\t);\n};\n\nexport default Forecast;\n","import * as React from 'react';\nimport { Icon } from 'antd';\nimport { Trans } from 'react-i18next';\nimport WeatherCard from '../reusable/WeatherCard';\nimport checkModulo from '../../functions/checkModulo';\nimport {\n\tLanding, LandingPageInputs, Title, Arrow, WeatherCarousel,\n} from '../Style';\nimport changeUrl from '../../functions/changeUrl';\nimport Back from '../reusable/Back';\n\nconst CurrentLocationForecast = ({ match, history }) => {\n\tconst [loading, setLoading] = React.useState(true);\n\tconst [data, setData] = React.useState('');\n\tconst [listDays, setListDays] = React.useState([]);\n\tconst carousel = React.useRef(React.createRef());\n\n\tconst next = () => carousel.current.next();\n\n\tconst prev = () => carousel.current.prev();\n\n\tReact.useEffect(() => {\n\t\tconst fetchData = () => {\n\t\t\t// https for heroku\n\t\t\tfetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${match.params.latitude}&lon=${match.params.longitude}&units=metric&APPID=27b52f2d96109ac0a634c200d7092254`)\n\t\t\t\t.then(async (res) => {\n\t\t\t\t\tconst response = await res.json();\n\t\t\t\t\tconst hours = checkModulo(new Date().getHours(), 3);\n\t\t\t\t\tsetData(response);\n\t\t\t\t\tsetListDays(response.list.filter((i) => i.dt_txt.includes(`${hours}:00:00`)));\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tchangeUrl(history, '/error');\n\t\t\t\t\treturn null;\n\t\t\t\t});\n\t\t};\n\t\tfetchData();\n\t}, [history, match]);\n\n\tconst Loaded = () => {\n\t\tif (loading) {\n\t\t\treturn (<Icon type='loading' style={{ fontSize: '3rem' }} />);\n\t\t}\n\t\treturn (\n\t\t\t<Landing>\n\t\t\t\t<Back history={history} />\n\t\t\t\t<Title>\n\t\t\t\t\t<Trans>Your location</Trans>\n\t\t\t\t\t{` ${data.city.name} `}\n\t\t\t\t\t{`${data.city.country}`}\n\t\t\t\t</Title>\n\t\t\t\t<LandingPageInputs style={{ alignItems: 'center' }}>\n\t\t\t\t\t<Arrow\n\t\t\t\t\t\ttype='left-circle'\n\t\t\t\t\t\tonClick={() => prev()}\n\t\t\t\t\t/>\n\t\t\t\t\t<WeatherCarousel\n\t\t\t\t\t\tref={(node) => (carousel.current = node)}\n\t\t\t\t\t\tautoplaySpeed={5000}\n\t\t\t\t\t\tinfinite\n\t\t\t\t\t\tarrows\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\twidth: '50vw', paddingBottom: '25px', paddingTop: '25px',\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlistDays.map((day) => (\n\t\t\t\t\t\t\t\t<WeatherCard\n\t\t\t\t\t\t\t\t\tkey={day.dt}\n\t\t\t\t\t\t\t\t\tday={day}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t</WeatherCarousel>\n\t\t\t\t\t<Arrow\n\t\t\t\t\t\ttype='right-circle'\n\t\t\t\t\t\tonClick={() => next()}\n\t\t\t\t\t/>\n\t\t\t\t</LandingPageInputs>\n\t\t\t</Landing>\n\t\t);\n\t};\n\n\treturn (\n\t\t<Landing>\n\t\t\t<Loaded />\n\t\t</Landing>\n\t);\n};\n\nexport default CurrentLocationForecast;\n","import * as React from 'react';\nimport { Typography, Input, Button } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { Landing, LandingPageInputs } from '../Style';\nimport Back from '../reusable/Back';\n\nconst Error = ({ history }) => {\n\tconst [loading, setLoading] = React.useState(false);\n\tconst { t } = useTranslation();\n\n\tconst onSearch = (val) => {\n\t\tsetLoading(!loading);\n\t\thistory.push(`/forecast/${val}`);\n\t};\n\n\treturn (\n\t\t<Landing>\n\t\t\t<Back history={history} />\n\t\t\t<Typography.Title level={3}>\n\t\t\t\t{t('Oops.. could not find this city.')}\n\t\t\t</Typography.Title>\n\t\t\t<Typography.Title level={3}>\n\t\t\t\t{t('Try again.')}\n\t\t\t</Typography.Title>\n\t\t\t<LandingPageInputs>\n\t\t\t\t<Input.Search\n\t\t\t\t\tplaceholder={t('Inputcity')}\n\t\t\t\t\tenterButton={<Button type='primary' loading={loading}>{t('button')}</Button>}\n\t\t\t\t\tsize='large'\n\t\t\t\t\tonSearch={(value) => onSearch(value)}\n\t\t\t\t\tstyle={{ marginRight: '10px' }}\n\t\t\t\t/>\n\t\t\t</LandingPageInputs>\n\t\t\t<Typography.Text style={{ marginTop: '15px' }}>\n\t\t\t\t{t('tip')}\n\t\t\t</Typography.Text>\n\t\t</Landing>\n\t);\n};\n\nexport default Error;\n","import styled from 'styled-components';\nimport { Select } from 'antd';\n\nconst LangSelect = styled(Select)`\n\tposition: absolute;\n\ttop: 20px;\n\tright: 40px;\n\twidth: 90px;\n`;\n\nexport default LangSelect;\n","import * as React from 'react';\nimport { Select } from 'antd';\nimport LangSelect from './Style';\n\nconst { Option } = Select;\n\nconst LanguageSelect = ({ changeLanguage, defaultLanguage }) => (\n\t<LangSelect\n\t\tdefaultValue={defaultLanguage}\n\t\tonChange={(value) => changeLanguage(value)}\n\t>\n\t\t<Option value='en-US'>en-US</Option>\n\t\t<Option value='pl-PL'>pl-PL</Option>\n\t</LangSelect>\n);\n\nexport default LanguageSelect;\n","import React from 'react';\nimport {\n\tHashRouter, Switch, Route, withRouter,\n} from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport LandingPage from './routes/LandingPage';\nimport Forecast from './routes/Forecast';\nimport CurrentLocationForecast from './routes/CurrentLocationForecast';\nimport Error from './routes/Error';\nimport LanguageSelect from './internationalization/LanguageSelect';\n\n//  API 27b52f2d96109ac0a634c200d7092254\n\nconst App = () => {\n\tconst { i18n } = useTranslation();\n\n\tconst changeLanguage = (lang) => {\n\t\ti18n.changeLanguage(lang);\n\t};\n\n\treturn (\n\t\t<HashRouter basename='/'>\n\t\t\t<LanguageSelect changeLanguage={changeLanguage} defaultLanguage={i18n.language} />\n\t\t\t<Switch>\n\t\t\t\t<Route path='/forecast/:longitude/:latitude' exact component={withRouter(CurrentLocationForecast)} />\n\t\t\t\t<Route path='/forecast/:city' exact component={withRouter(Forecast)} />\n\t\t\t\t<Route path='/error' exact component={withRouter(Error)} />\n\t\t\t\t<Route path='/' component={withRouter(LandingPage)} />\n\t\t\t</Switch>\n\t\t</HashRouter>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './styles/index.css';\nimport './components/internationalization/i18n';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}